name: BotDeployProd 

trigger: none



variables:
  APP_ENV: prod
  K8S_DEPLOYMENT_FILE: infra/k8s/bot_to_deploy.yaml
  K8S_YAML_TO_EDIT: infra/k8s/bot.yaml
  BOT_IMAGE_NAME: '700935310038.dkr.ecr.us-west-2.amazonaws.com/lidoror_bot_prod:$(TAG)'

stages:
    - stage: Kubectl
      jobs:
          - job: PrepareToDeploy
            steps:
            

            - task: KubectlInstaller@0
              displayName: InstallKubectl
              inputs:
                kubectlVersion: '1.23.6'


            - task: PythonScript@0
              displayName: PrepareYaml 
              inputs:
                scriptSource: 'filePath'
                scriptPath: 'scripts/k8s_deployment_yaml_customize.py'
            
            - task: PublishPipelineArtifact@1
              displayName: PublishDeployFile
              inputs:
                targetPath: '$(Pipeline.Workspace)'
                artifact: 'BotDeploy.yaml'
                publishLocation: 'filepath'
                fileSharePath: 'infra/k8s/bot_to_deploy.yaml'
            
            - script: cat infra/k8s/bot_to_deploy.yaml

          - job: 'Validation'
            dependsOn: PrepareToDeploy
            pool: server
            steps:
            - task: ManualValidation@0
              inputs:
                notifyUsers: 'lidororanim@gmail.com'
                instructions: 'need permission before deploying to prod'
          
          - job: 'DeployEKS'
            dependsOn: Validation
            steps:

            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'BotDeploy.yaml'
                targetPath: '$(Pipeline.Workspace)/infra/k8s'
            - task: Kubernetes@1
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceEndpoint: 'eks stockholm'
                namespace: 'lidoror-ns'
                command: 'apply'
                arguments: '-f infra/k8s/BotDeploy.yaml'
                secretType: 'dockerRegistry'
                containerRegistryType: 'Azure Container Registry'